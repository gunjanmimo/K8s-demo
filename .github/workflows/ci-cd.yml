name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: message
        run: echo "Building the project"

  test:
    runs-on: ubuntu-latest

    steps:
      - name: message
        run: echo "Testing the code"

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Run Super-Linter
        run: echo "Running Super-Linter to check for security vulnerabilities"

  merge:
    runs-on: ubuntu-latest
    needs: [build, test, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout main
          git merge ${{ github.event.pull_request.head.ref }}

      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git push origin main

  docker-push:
    runs-on: ubuntu-latest
    needs: merge

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker build
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/django-app:latest .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/django-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [docker-push]

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIAL }}

      - name: Set up Kubectl
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/backend_service/.
          kubectl apply -f k8s/database_service/.
